#!/bin/bash
​
Color_Off='\033[0m'
BRed="\033[1;31m"         # Red
BGreen="\033[1;32m"       # Green
BYellow="\033[1;33m"      # Yellow
BBlue="\033[1;34m"        # Blue
​
MSG_FILE=$1
FILE_CONTENT="$(head -n 1 $MSG_FILE)"
​
# Initialize constants here
REGEX='(feat|fix|docs|style|refactor|test|chore)'
ERROR_MSG="Commit message format must match regex \"${REGEX}\""
PERIOD_MSG="Commit Subject must not end with a period"
CHARACTER_MSG="Commit Subject must be within 50 characters"
UPPER_MSG="Commit Subject must start with a Capital Letter"
​
IFS=":" read -ra FILE_ARRAY <<< "$FILE_CONTENT"
​
TYPE=${FILE_ARRAY[0]}
SUBJECT=${FILE_ARRAY[1]:1}
​
if [[ $TYPE =~ $REGEX ]]; then
  if [[ ! "${SUBJECT: -1}" == "." ]]; then
    if [[ ! [[  ${#SUBJECT} -gt 50 ]] || [[ ${#SUBJECT} -lt 1 ]] ]]; then
      if [[ ${SUBJECT:0:1} =~ [A-Z] ]]; then
        printf "${BGreen}Good commit!\n${Color_Off}"
        exit 0
      else
        printf "${BRed}Bad commit ${BBlue}\"$FILE_CONTENT\"\n"
        printf "${BYellow}$UPPER_MSG\n"
      fi
    else
      printf "${BRed}Bad commit ${BBlue}\"$FILE_CONTENT\"\n"
      printf "${BYellow}$CHARACTER_MSG\n"
    fi
   else
    printf "${BRed}Bad commit ${BBlue}\"$FILE_CONTENT\"\n"
    printf "${BYellow}$PERIOD_MSG\n"
  fi
else
  printf "${BRed}Bad commit ${BBlue}\"$FILE_CONTENT\"\n"
  printf "${BYellow}$ERROR_MSG\n"
fi
printf "commit-msg hook failed (add --no-verify to bypass)\n"
exit 1